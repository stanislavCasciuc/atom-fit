basePath: /api/v1
definitions:
  handlers.ActivationPayload:
    properties:
      token:
        type: string
    type: object
  handlers.CreateWorkoutExercisePayload:
    properties:
      duration:
        type: integer
      exercise_id:
        type: integer
    required:
    - duration
    - exercise_id
    type: object
  handlers.CreateWorkoutPayload:
    properties:
      description:
        type: string
      exercises:
        items:
          $ref: '#/definitions/handlers.CreateWorkoutExercisePayload'
        type: array
      name:
        type: string
      tutorial_link:
        type: string
    required:
    - exercises
    - name
    type: object
  handlers.LogWeightPayload:
    properties:
      weight:
        type: number
    required:
    - weight
    type: object
  handlers.LoginPayload:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.TokenResponse:
    properties:
      token:
        type: string
    type: object
  handlers.WorkoutReviewPayload:
    properties:
      content:
        type: string
      rating:
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        type: integer
      title:
        maxLength: 255
        type: string
    required:
    - content
    - rating
    - title
    type: object
  handlers.WorkoutsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/store.Workout'
        type: array
      total_count:
        type: integer
    type: object
  handlers.registerUserPayload:
    properties:
      age:
        type: integer
      email:
        type: string
      goal:
        enum:
        - lose
        - gain
        - maintain
        type: string
      height:
        maximum: 250
        minimum: 100
        type: integer
      is_male:
        type: boolean
      password:
        minLength: 8
        type: string
      username:
        maxLength: 20
        minLength: 4
        type: string
      weight:
        type: number
      weight_goal:
        type: number
    required:
    - email
    - goal
    - is_male
    - password
    - username
    type: object
  nutrients.UserNutrientsGoal:
    properties:
      calories:
        type: number
      carbohydrats:
        type: number
      fats:
        type: number
      proteins:
        type: number
    type: object
  response.SuccessResponse:
    properties:
      status:
        type: string
    type: object
  store.Exercise:
    properties:
      created_at:
        type: string
      description:
        type: string
      duration:
        type: integer
      id:
        type: integer
      is_duration:
        type: boolean
      like:
        type: integer
      muscles:
        items:
          type: string
        type: array
      name:
        type: string
      tutorial_link:
        type: string
      user_id:
        type: integer
    type: object
  store.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      user_attr:
        $ref: '#/definitions/store.UserAttributes'
      username:
        type: string
    type: object
  store.UserAttributes:
    properties:
      age:
        type: integer
      goal:
        enum:
        - lose
        - gain
        - maintain
        type: string
      height:
        type: integer
      is_male:
        type: boolean
      user_id:
        type: integer
      weight:
        type: number
      weight_goal:
        type: number
    required:
    - goal
    type: object
  store.UserWeightByDate:
    properties:
      date:
        type: string
      weight:
        type: number
    type: object
  store.Workout:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      rating:
        type: number
      reviews_count:
        type: integer
      tutorial_link:
        type: string
      user_id:
        type: integer
      user_liked:
        type: boolean
      workout_exercises:
        items:
          $ref: '#/definitions/store.WorkoutExercises'
        type: array
    type: object
  store.WorkoutExercises:
    properties:
      duration:
        type: integer
      exercise:
        $ref: '#/definitions/store.Exercise'
      exercise_id:
        type: integer
      workout_id:
        type: integer
    type: object
  store.WorkoutReview:
    properties:
      content:
        type: string
      created_at:
        type: string
      rating:
        type: integer
      title:
        type: string
      user_id:
        type: integer
      workout_id:
        type: integer
    type: object
  store.WorkoutReviewWithMetadata:
    properties:
      content:
        type: string
      created_at:
        type: string
      rating:
        type: integer
      title:
        type: string
      user_id:
        type: integer
      username:
        type: string
      workout_id:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for Atom Fit API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Atom Fit API
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: LoginHandler
      parameters:
      - description: Login Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
      summary: LoginHandler
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.registerUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
      summary: Register a new
      tags:
      - auth
  /exercise/{exerciseID}/like:
    delete:
      consumes:
      - application/json
      description: Unlike exercise
      parameters:
      - description: Exercise ID
        in: path
        name: exerciseID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Unlike exercise
      tags:
      - likes
  /exercises:
    get:
      consumes:
      - application/json
      description: Get all Exercises
      parameters:
      - description: Since
        in: query
        name: since
        type: string
      - description: Until
        in: query
        name: until
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Tags
        in: query
        name: tags
        type: string
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.Exercise'
            type: array
      summary: Get all Exercises
      tags:
      - exercises
    post:
      consumes:
      - application/json
      description: Create a new Exercise
      parameters:
      - description: Exercise Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/store.Exercise'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/store.Exercise'
      security:
      - ApiKeyAuth: []
      summary: Create a new Exercise
      tags:
      - exercises
  /exercises/{exerciseID}/like:
    post:
      consumes:
      - application/json
      description: Like exercise
      parameters:
      - description: Exercise ID
        in: path
        name: exerciseID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Like exercise
      tags:
      - likes
  /exercises/{id}:
    get:
      consumes:
      - application/json
      description: Get Exercise by id from param
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Exercise'
      summary: Get Exercise by id from param
      tags:
      - exercises
  /nutrients/daily-goal:
    get:
      consumes:
      - application/json
      description: Get macronutrients goal per day for the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/nutrients.UserNutrientsGoal'
      security:
      - ApiKeyAuth: []
      summary: Get macronutrients goal per day
      tags:
      - nutrients
  /reviews/workout/{workoutID}:
    get:
      consumes:
      - application/json
      description: Get workout reviews
      parameters:
      - description: Workout ID
        in: path
        name: workoutID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.WorkoutReviewWithMetadata'
            type: array
        "400":
          description: Bad Request
          schema: {}
      summary: Get workout reviews
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Review workout
      parameters:
      - description: Workout ID
        in: path
        name: workoutID
        required: true
        type: integer
      - description: Review workout payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.WorkoutReviewPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.WorkoutReview'
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Review workout
      tags:
      - reviews
  /users:
    get:
      consumes:
      - application/json
      description: Get a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - users
  /users/activate:
    put:
      consumes:
      - application/json
      description: Activate a user
      parameters:
      - description: Activate User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.ActivationPayload'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Activate a ActivateUser
      tags:
      - users
  /users/attributes:
    get:
      consumes:
      - application/json
      description: Get a user with attributes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
      security:
      - ApiKeyAuth: []
      summary: Get a user with attributes
      tags:
      - users
  /users/attributes/log/weight:
    post:
      consumes:
      - application/json
      description: Log a user weight
      parameters:
      - description: Log Weight Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.LogWeightPayload'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Log a LogWeight
      tags:
      - users
  /users/attributes/weight:
    get:
      consumes:
      - application/json
      description: Get a user weight
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.UserWeightByDate'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get a user weight
      tags:
      - users
  /workouts:
    post:
      consumes:
      - application/json
      description: Create a new workout
      parameters:
      - description: Create Workout Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateWorkoutPayload'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Create a new workout
      tags:
      - workouts
  /workouts/:
    get:
      consumes:
      - application/json
      description: Get all workouts
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Tags
        in: query
        name: tags
        type: string
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.WorkoutsResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all workouts
      tags:
      - workouts
  /workouts/{workoutID}:
    get:
      consumes:
      - application/json
      description: Get workout by ID
      parameters:
      - description: Workout ID
        in: path
        name: workoutID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Workout'
      summary: Get workout by ID
      tags:
      - workouts
  /workouts/{workoutID}/like:
    delete:
      consumes:
      - application/json
      description: Unlike Workout
      parameters:
      - description: Workout ID
        in: path
        name: workoutID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Unlike Workout
      tags:
      - likes
    post:
      consumes:
      - application/json
      description: Like exercise
      parameters:
      - description: Workout ID
        in: path
        name: workoutID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Like exercise
      tags:
      - likes
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
